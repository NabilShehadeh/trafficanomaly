name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y tcpdump wireshark-common libpcap-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-ci.txt
    
    - name: Create necessary directories
      run: |
        mkdir -p data/cicids2017 data/captured models logs tests
    
    - name: Run basic import tests
      run: |
        python -c "
        import sys
        sys.path.append('.')
        try:
            from src.data_collection.collector import NetworkDataCollector
            from src.data_processing.processor import NetworkDataProcessor
            from src.models.anomaly_detector import AnomalyDetector
            print('‚úÖ All modules imported successfully')
        except ImportError as e:
            print(f'‚ùå Import error: {e}')
            sys.exit(1)
        "
    
    - name: Run basic functionality tests
      run: |
        python -c "
        import sys
        sys.path.append('.')
        import pandas as pd
        import numpy as np
        
        # Test data collection
        from src.data_collection.collector import NetworkDataCollector
        collector = NetworkDataCollector()
        test_data = collector.generate_synthetic_data(10)
        assert not test_data.empty, 'Data collection failed'
        print('‚úÖ Data collection test passed')
        
        # Test data processing
        from src.data_processing.processor import NetworkDataProcessor
        processor = NetworkDataProcessor()
        processed_data = processor.parse_cicids2017_format(test_data)
        assert not processed_data.empty, 'Data processing failed'
        print('‚úÖ Data processing test passed')
        
        print('üéâ All basic tests passed!')
        "
    
    - name: Run linting
      run: |
        pip install flake8 black
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics --max-line-length=120
        black --check src/ --line-length=120

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-ci.txt
    
    - name: Create necessary directories
      run: |
        mkdir -p data/cicids2017 data/captured models logs tests
    
    - name: Test Python application
      run: |
        python -c "
        import sys
        sys.path.append('.')
        from src.data_collection.collector import NetworkDataCollector
        collector = NetworkDataCollector()
        data = collector.generate_synthetic_data(5)
        print(f'Generated {len(data)} synthetic samples')
        print('‚úÖ Application test passed')
        "

  deploy:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to production
      run: |
        echo "Deployment would happen here"
        # Add your deployment commands here
